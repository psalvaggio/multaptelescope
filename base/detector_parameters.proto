package mats;

message DetectorBandpass {
  // The center wavelength of the band [m]
  optional double center_wavelength = 1;

  // A list of wavelengths [m]
  repeated double wavelength = 2;

  // A list of corresponding quantum efficiencies. [unitless]
  repeated double quantum_efficiency = 3;
}

message DetectorParameters {
  // The spectral bands that will be output by the model.
  repeated DetectorBandpass band = 1;

  // The pixel pitch (spacing between the center of the pixels)
  // of the detector [m]
  optional double pixel_pitch = 2;

  // The fill factor of the detector elements [unitless]
  optional double fill_factor = 12;

  // The temperature of the detector [K]
  optional double temperature = 3;

  // The dark current doubling temperature [C or K]
  optional double darkcurr_doubling_temp = 4;

  // The reference temperature for the dark current [K]
  optional double darkcurr_reference_temp = 5;

  // The RMS of the dark current at the reference temperature
  // [rms electrons / pixel / s]
  optional double darkcurr_reference_rms = 6;

  // The sensitivity of the detector [uV/electron]
  optional double output_sensitivity = 7;

  // Full well capacity [electrons]
  optional double full_well_capacity = 16;

  // The bit depth of the A/D converter [bits]
  optional int32 a_d_bit_depth = 14;

  // The "effective" gain factor for the detector [e- / digital count]
  optional double electrons_per_adu = 15;

  // Read noise RMS [rms electrons]
  optional double read_rms = 8;

  // Read-out time for the detector [s]
  optional double readout_time = 9;

  // --------------- COMPUTED PARAMETERS ---------------

  // The number of rows in the detector
  optional int32 array_rows = 10;

  // The number of columns in the detector
  optional int32 array_cols = 11;

}
