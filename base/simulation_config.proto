package mats;

import "base/aperture_parameters.proto";

message SimulationConfig {
  // The base directory for this simulation.
  // Log files will be output to base_directory/log_files
  // Image outputs will be put in base_directory/images
  // Input data is stored in base_directory/input
  optional string base_directory = 1;

  // Altitude of the telescope [m]
  optional double altitude = 2;

  // The standard array size to use in simulation. This is auto-computed using
  // larger dimension of the input image.
  optional int32 array_size = 3;

  // The simulations that need to be run.
  repeated Simulation simulation = 4;

  // The reference wavelength of the system. Whenever anything is in units of
  // waves, this is the wavelength that it corresponds to.
  optional double reference_wavelength = 5;

  // The filename of the DetectorParameters protobuf file.
  optional string detector_params_filename = 6;
 
  // The filename of the input radiance image.
  optional string input_image_filename = 7;

  // The filename for a spectral weighting function text file.
  optional string spectral_weighting_filename = 8;
}

message Simulation {
  optional int32 simulation_id = 1;
  
  // Optional name of the simulation, used in displays, plot titles, etc.
  optional string name = 11;
  
  optional ApertureParameters aperture_params = 3;

  // Integration time [seconds]
  optional double integration_time = 6;

  // Ground Sample Distance (GSD) of the telescope [meters/pixel]
  optional double gsd = 9;

  // Focal length, if specfied, overrides the gsd/altitude. [m]
  optional double focal_length = 10;

  // If the telescope is going to have off-axis aberrations, how many samples to
  // use in the radial and angular dimensions. The multiplier on run-time is
  // (radial_zones - 1) * angular_zones + 1.
  optional int32 radial_zones = 12 [default = 3];
  optional int32 angular_zones = 13 [default = 6];

  // Some aperture type choices may require additional parameters.
  // Protobuf extensions are a nice way to smuggle them in without changing the
  // constructor interface to the Aperture subclasses.
  extensions 1000 to max;
}
